question : 
           Teena is very good at competitive programming, she solved enough problems on arrays and her friend wants to test her knowledge in arrays, so gave her following task :

The problem is given an array A having N integers, for each element i (1 <= i <= N), find x+y  where x is the largest number less than i such that A[x]>A[i] and y is the smallest number greater than i such that A[y]>A[i].
If there is no x < i such that A[x]>A[i], then take x=−1. Similarly, if there is no y>i such that A[y]>A[i], then take y=−1.

Input
Input Format

First line consists of a single integer denoting N.

Second line consists of N space separated integers denoting the array A.

Constraints

1 <= N <= 10^6

1 <= A[i] <= 10^9


Output
Print N space separated integers, denoting x+y for each i


Sample Input 1 

5
5 4 1 3 2
Sample Output 1

-2 0 6 1 3 
Hint

Sample 1 Explanation

Values of x for each i: -1,1,2,2,4

Values of y for each i: -1,-1,4,-1,-1

So, x+y for each i: -2,0,6,1,3     @Sourav  sir isko klaise solve kare


  Solution : 
	          import java.util.*;
import java.util.Collections;
 
       class Main{
           public static void main(String args[]){

              Scanner sc = new Scanner(System.in);
              int n = sc.nextInt();
              int arr[] = new int[n+1];
              for(int i=1; i<=n; i++){
                  arr[i]=sc.nextInt();
              }
                int xrr[] = new int[n+1];
                int yrr[] = new int[n+1];
                xrr[1]=-1;
                yrr[n]=-1;
               
                Stack<Integer> st = new Stack<>();
                // int a =-1;
                // st.push(a);
               for(int i=2; i<=n; i++){
                    if(arr[i]<arr[i-1]){
                      st.push(i-1);
                      xrr[i]=st.peek();   // 5 4 1 3 2  //7 6 4 1 5 3
                    }else{
                       
                        while((!st.empty()) && arr[i]>arr[st.peek()]){
                              st.pop();
                        }
                         if(!st.empty()){ 
                        xrr[i]= st.peek();  
                        }else{
                            xrr[i]=-1;
                        }
                    }
                   
               }


            Stack<Integer> st2 = new Stack<>();
                // int a =-1;
                // st.push(a);
               for(int i=n-1; i>=1; i--){
                    if(arr[i]<arr[i+1]){
                      st2.push(i+1);
                      yrr[i]=st2.peek();   // 5 4 1 3 2  //7 6 4 1 5 3
                    }else{
                       
                        while((!st2.empty()) && arr[i]>arr[st2.peek()]){
                              st2.pop();
                        }
                         if(!st2.empty()){ 
                        yrr[i]= st2.peek();  
                        }else{
                            yrr[i]=-1;
                        }
                    }
                   
               }


              int ans[] = new int[n+1];
               
               for(int i=1; i<=n; i++){
                  ans[i]= xrr[i]+yrr[i];

               }
              // System.out.println();
               for(int i=1; i<=n; i++){
                   System.out.print(ans[i]+" ");
                   
               }
           }
       }





